# 📁 專案結構
# ├── .gitlab-ci.yml
# ├── scrape_jobs/
# │   └── secure_app.tpl.yml
# └── README.md

# .gitlab-ci.yml
stages:
  - generate
  - deploy

generate_scrape_config:
  stage: generate
  image: alpine
  before_script:
    - apk add --no-cache gettext openssh
  script:
    - mkdir -p out
    # 將密碼存為 password_file（只存在 CI pipeline，不 commit）
    - echo "$SCRAPE_PASSWORD" > out/${CI_JOB_NAME}_password.txt
    - chmod 600 out/${CI_JOB_NAME}_password.txt
    # 套用變數模板產生 Prometheus 設定檔
    - envsubst < scrape_jobs/secure_app.tpl.yml > out/scrape_config.yml
  artifacts:
    paths:
      - out/

# 你可以把這步驟改成 Ansible、Rsync 等自動化工具
# 以下為 SCP 的簡單方式：
deploy_to_vm:
  stage: deploy
  image: alpine
  before_script:
    - apk add --no-cache openssh
  script:
    # 上傳 scrape config 到 Prometheus 的目錄中
    - scp out/scrape_config.yml prometheus@your-vm:/etc/prometheus/scrape_config.yml
    - scp out/${CI_JOB_NAME}_password.txt prometheus@your-vm:/etc/prometheus/secrets/${CI_JOB_NAME}_password.txt
  only:
    - main
  dependencies:
    - generate_scrape_config

# 🖥️ Prometheus VM 上的初始設定（僅一次）
# bash
# 複製
# 編輯
# sudo mkdir -p /etc/prometheus/secrets
# sudo chown -R prometheus:prometheus /etc/prometheus/secrets
# sudo chmod -R 700 /etc/prometheus/secrets
